#=============================================================================
# Copyright 2018-2019 BlazingDB, Inc.
#     Copyright 2018 Christian Noboa Mardini <christian@blazingdb.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=============================================================================

## Test name
set(GDF_APP_NAME  BinaryOperationsBench)
set(GDF_BENCH_DIR bench)


## Set sources
set(GDF_SOURCE_FILES
    "${PROJECT_SOURCE_DIR}/src/tests/binary-operation/util/types.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/binary-operation-benchmark.cpp")


## Add link directory
link_directories(${CUDA_LIBRARY_DIR})
link_directories(${CUDA_LIBRARY_STUBS_DIR})
link_directories(${GOOGLE_BENCHMARK_LIBRARY_DIR})


## Add target
add_executable(${GDF_APP_NAME} ${GDF_SOURCE_FILES})


## Clear include header property
set_target_properties(${GDF_APP_NAME}
                      PROPERTIES
                      INCLUDE_DIRECTORIES "")
set_target_properties(${GDF_APP_NAME}
                      PROPERTIES
                      RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${GDF_BENCH_DIR}")


## Include headers
target_include_directories(${GDF_APP_NAME} PRIVATE "${CUDA_INCLUDE_DIRS}")
target_include_directories(${GDF_APP_NAME} PRIVATE "${PROJECT_SOURCE_DIR}/include")
target_include_directories(${GDF_APP_NAME} PRIVATE "${PROJECT_SOURCE_DIR}/src")
target_include_directories(${GDF_APP_NAME} PRIVATE "${GOOGLE_BENCHMARK_INCLUDE_DIR}")


## Link libraries
target_link_libraries(${GDF_APP_NAME} ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(${GDF_APP_NAME} ${GOOGLE_BENCHMARK_LIB})
target_link_libraries(${GDF_APP_NAME} ${GOOGLE_BENCHMARK_MAIN_LIB})
target_link_libraries(${GDF_APP_NAME} gdf)
target_link_libraries(${GDF_APP_NAME} ${CUDA_CUDA_LIB})
target_link_libraries(${GDF_APP_NAME} ${CUDA_NVRTC_LIB})


message(STATUS "benchmark for binary operations")
message(STATUS "Execute help: ${GDF_BENCH_DIR}/${GDF_APP_NAME} --help")
message(STATUS "Execute benchmark: ${GDF_BENCH_DIR}/${GDF_APP_NAME} --benchmark_counters_tabular=true")
