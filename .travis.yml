dist: trusty
sudo: required
language: cpp

branches:
    only:
        - master
env:
  global:
    secure: aNAYL4Upc0l+m1bU3S3fkiz5hLMWPAnRkAuO5zJ+8qoCanGuGthOGTTBnO8WwtD8G1L7n2opQ7xYKyW0oV+Ylv/vzmofVuOkVLcXrjGbeHe//Q06H+UkKyPMATTHR0cYIbMICOE5cNGVl8Zw3+i6yoLL5EQ/r65IWfPn0SxnJapPFCYwR9+p77u9d94Hw1tFdC3oqIVBnLsUl4q1eXQR+zDAFIRqjYyPGi3z014Vkqyy+sN5ysw4b8tIYCLqHl/YBb1ONFOo4+sG0RvxfxoyEk03LPvNYaYORUEvrXibPbkt3IkI3HGv690xLnI4JXheb7r//9rWCtSaOqnpGpnZQh4qjOOnY0Gtap3/FdBi8mITN6ytKsytTtBJ+Jhdzx1tHp4gFrrWJSEJGpHs2n5OneSDubFAQNEiwYX0K6K7A8R6a8JG6PTjvmZgVMrJ025gQoz4P9E2IRRhhyA0Z9tvEPnqaJUVdA06BK/ekKtW3+lECkNFvpB4WC9tK0WUzbw4PRNolfsr9ScmpzaFTpsv9HnYVcttgyoYylmmREpgCBCsQtmAHOARDFAXnLWtxIGKWciENVb40bwurXhKzqZ6QJbRoUpGFEkVTnHYnYv2qLK8zUm0toSagpA2hMxlppYgHtnWIRu1pW5HA7tK21BfH5tEW6IrQoDPjQSaLhboVzA=

matrix:
  include:
    - env: CUDA=8.0.61-1
    # These packages will work with all versions of CUDA
    - env: CUDA=8.0.61-1 BUILD_CFFI=1 PYTHON=3.6
    - env: CUDA=8.0.61-1 BUILD_CFFI=1 PYTHON=3.5
    - env: CUDA=8.0.61-1 BUILD_CFFI=1 PYTHON=2.7

before_install:
  - docker run -d --name ubuntu-build -v $(pwd):/travis ubuntu:xenial tail -f /dev/null
  - travis_retry wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  # Install outside container
  - ./miniconda.sh -b
  - export PATH=$HOME/miniconda3/bin:$PATH
  # And inside container
  - docker exec -t ubuntu-build bash -c "cd /travis;
    echo export CUDA=${CUDA} BUILD_CFFI=${BUILD_CFFI} PYTHON=${PYTHON} > docker_env_local.sh;
    cat ./travisci/docker_env.sh >> docker_env_local.sh;
    source docker_env_local.sh; 
    source ./travisci/install-cuda-xenial.sh;
    ./miniconda.sh -b"

install:
  # check
  - conda install conda-build anaconda-client --yes
  - docker exec -t ubuntu-build bash -c 'source /travis/docker_env_local.sh;
    nvcc --version;
    conda --version;
    conda install conda-build anaconda-client --yes'

script:
  # build ligdf
  - docker exec -t ubuntu-build bash -c "cd /travis; 
    source /travis/docker_env_local.sh;
    source ./travisci/build_libgdf.sh"
  # build libgdf_cffi
  - docker exec -t ubuntu-build bash -c "cd /travis;
    source /travis/docker_env_local.sh;
    source ./travisci/build_libgdf_cffi.sh"

after_success:
  - source ./travisci/upload.sh
